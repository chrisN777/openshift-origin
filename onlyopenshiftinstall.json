{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URL where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated.",
				"artifactsBaseUrl": ""
			},
			"defaultValue": "https://raw.githubusercontent.com/Microsoft/openshift-origin/master/"
		},
		"masterVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Master VM size"
			}
		},
		"nodeVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Node VM(s) size"
			}
		},
		"infraVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Infra Node VM(s) size"
			}
		},
		"openshiftClusterPrefix": {
			"type": "string",
			"defaultValue": "aacl",
			"minLength": 1,
			"maxLength": 20,
			"metadata": {
				"description": "OpenShift cluster prefix.  Used to generate master, infra and node hostnames.  Maximum of 20 characters."
			}
		},
		"masterInstanceCount": {
			"type": "int",
			"defaultValue": 3,
			"allowedValues": [1, 3, 5],
			"metadata": {
				"description": "Number of OpenShift masters."
			}
		},
		"infraInstanceCount": {
			"type": "int",
			"defaultValue": 2,
			"allowedValues": [1, 2, 3],
			"metadata": {
				"description": "Number of OpenShift infra nodes."
			}
		},
		"glusterInstanceCount": {
			"type": "int",
			"defaultValue": 2,
			"allowedValues": [1, 2, 3],
			"metadata": {
				"description": "Number of OpenShift gluster nodes."
			}
		},	
		"nodeInstanceCount": {
			"type": "int",
			"defaultValue": 1,
			"minValue": 1,
			"allowedValues": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
			"metadata": {
				"description": "Number of OpenShift nodes"
			}
		},
		"dataDiskSize": {
			"type": "int",
			"defaultValue": 128,
			"minValue": 1,
			"allowedValues": [128, 512, 1023],
			"metadata": {
				"description": "Size of Datadisk in GB for Docker volume"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "ocpadmin",
			"minLength": 1,
			"metadata": {
				"description": "Administrator username on all VMs and first user created for OpenShift login"
			}
		},
		"openshiftPassword": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Password for OpenShift user to login to OpenShift Console"
			}
		},
		"sshPublicKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH public key for all VMs"
			}
		},
		"keyVaultResourceGroup": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Resource Group that contains the Key Vault"
			}
		},
		"keyVaultName": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Name of the Key Vault"
			}
		},
		"keyVaultSecret": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Key Vault Secret Name that contains the Private Key"
			}
		},
		"aadClientId": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Azure AD Client ID"
			}
		},
		"aadClientSecret": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Azure AD Client Secret"
			}
		},
		"defaultSubDomainType": {
			"type": "string",
			"defaultValue": "nipio",
			"allowedValues": [
				"nipio", "custom"
			],
			"metadata": {
				"description": "Default Subdomain type - nip.io or custom (defined in next parameter)"
			}
		},
		"defaultSubDomain": {
			"type": "string",
			"defaultValue": "contoso.com",
			"metadata": {
				"description": "Default Subdomain for application routing (Wildcard DNS) - must enter something even if you are using nip.io"
			}
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"resourceGroupName": "[resourceGroup().id]",
		"apiVersionCompute": "2015-06-15",
		"apiVersionNetwork": "2015-06-15",
		"apiVersionStorage": "2015-06-15",
		"apiVersionLinkTemplate": "2015-01-01",
		"namingInfix": "[toLower(parameters('openshiftClusterPrefix'))]",
		"openshiftMasterHostname": "[concat(variables('namingInfix'), '-master')]",
		"openshiftNodeHostname": "[concat(variables('namingInfix'), '-node')]",
		"openshiftInfraHostname": "[concat(variables('namingInfix'), '-infra')]",
		"openshiftGlusterHostname": "[concat(variables('namingInfix'), '-gluster')]",
		"newStorageAccountMaster": "[concat('master', uniqueString(concat(resourceGroup().id, 'msa')))]",
		"newStorageAccountInfra": "[concat('infra', uniqueString(concat(resourceGroup().id, 'infra')))]",
		"newStorageAccountGluster": "[concat('gluster', uniqueString(concat(resourceGroup().id, 'gluster')))]",
		"newStorageAccountNodeOs": "[concat('nodeos', uniqueString(concat(resourceGroup().id, 'nodeossa')))]",
		"newStorageAccountNodeData": "[concat('nodedata', uniqueString(concat(resourceGroup().id, 'nodedatasa')))]",
		"newStorageAccountRegistry": "[concat('registry', uniqueString(concat(resourceGroup().id, 'registry')))]",
		"newStorageAccountPersistentVolume1": "[concat('pv1sa', uniqueString(concat(resourceGroup().id, 'persistentvolume1')))]",
		"addressPrefix": "10.0.0.0/8",
		"masterSubnetPrefix": "10.1.0.0/16",
		"nodeSubnetPrefix": "10.2.0.0/16",
		"virtualNetworkName": "openshiftvnet",
		"masterSubnetName": "mastersubnet",
		"nodeSubnetName": "nodesubnet",
		"infraLbPublicIpDnsLabel": "[concat('infradns', uniqueString(concat(resourceGroup().id, 'infra')))]",
		"openshiftMasterPublicIpDnsLabel": "[concat('masterdns', uniqueString(concat(resourceGroup().id, 'master')))]",
		"persistentVolume1Type": "Standard_LRS",

		"masterLoadBalancerName": "[concat(variables('openshiftMasterHostname'), 'lb')]",
		"masterPublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('openshiftMasterPublicIpDnsLabel'))]",
		"masterLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('masterLoadBalancerName'))]",
		"masterLbFrontEndConfigId": "[concat(variables('masterLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"masterLbBackendPoolId": "[concat(variables('masterLbId'),'/backendAddressPools/loadBalancerBackend')]",
		"masterLbHttpProbeId": "[concat(variables('masterLbId'),'/probes/httpProbe')]",
		"masterLb8443ProbeId": "[concat(variables('masterLbId'),'/probes/8443Probe')]",

		"infraLoadBalancerName": "[concat(variables('openshiftInfraHostname'), 'lb')]",
		"infraPublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('infraLbPublicIpDnsLabel'))]",
		"infraLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('infraLoadBalancerName'))]",
		"infraLbFrontEndConfigId": "[concat(variables('infraLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"infraLbBackendPoolId": "[concat(variables('infraLbId'),'/backendAddressPools/loadBalancerBackend')]",
		"infraLbHttpProbeId": "[concat(variables('infraLbId'),'/probes/httpProbe')]",
		"infraLbHttpsProbeId": "[concat(variables('infraLbId'),'/probes/httpsProbe')]",
		"osImage": "centos",
		"centos": {
			"publisher": "Openlogic",
			"offer": "CentOS",
			"sku": "7.3",
			"version": "latest"
		},
		"rhel": {
			"publisher": "RedHat",
			"offer": "RHEL",
			"sku": "7-RAW",
			"version": "latest"
		},
		"singlequote": "'",
		"sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
		"nodePrepScriptUrl": "[concat(parameters('_artifactsLocation'), 'scripts/nodePrep.sh')]",
		"masterPrepScriptUrl": "[concat(parameters('_artifactsLocation'), 'scripts/masterPrep.sh')]",
		"nodePrepScriptFileName": "nodePrep.sh",
		"masterPrepScriptFileName": "masterPrep.sh",
		"clusterNodeDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), 'nested/clusternodestack.json')]",
		"glusterNodeDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), 'nested/glusternodestack.json')]",
		
		"openshiftDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), 'nested/openshiftdeploy.json')]",
		"vmSizesMap": {
			"Standard_A4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A5": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A6": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A7": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A8": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A9": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A10": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A11": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D1": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D11": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D12": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D13": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D14": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D1_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D2_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D3_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D4_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D5_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D11_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D12_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D13_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D14_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G1": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G5": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_DS1": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS4": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS11": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS12": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS13": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS14": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS1_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS2_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS3_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS4_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS5_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS11_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS12_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS13_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS14_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS15_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS1": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS4": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS5": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D2_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D4_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D8_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D16_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D32_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D64_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D2s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D4s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D8s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D16s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D32s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_D64s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E2_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E4_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E8_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E16_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E32_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E64_v3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_E2s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E4s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E8s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E16s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E32s_v3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_E64s_v3": {
				"storageAccountType": "Premium_LRS"
			}
		}
	},
	"resources": [
		 {
			"name": "OpenShiftDeployment",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('apiVersionLinkTemplate')]",
		
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('openshiftDeploymentTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"_artifactsLocation": {
						"value": "[parameters('_artifactsLocation')]"
					},
					"apiVersionCompute": {
						"value": "[variables('apiVersionCompute')]"
					},
					"newStorageAccountRegistry": {
						"value": "[variables('newStorageAccountRegistry')]"
					},
					"newStorageAccountKey": {
						"value": "[listKeys(variables('newStorageAccountRegistry'),'2015-06-15').key1]"
					},
					"newStorageAccountPersistentVolume1": {
						"value": "[variables('newStorageAccountPersistentVolume1')]"
					},
					"newStorageAccountPV1Key": {
						"value": "[listKeys(variables('newStorageAccountPersistentVolume1'),'2015-06-15').key1]"
					},
					"openshiftMasterHostname": {
						"value": "[variables('openshiftMasterHostname')]"
					},
					"openshiftMasterPublicIpFqdn": {
						"value": "[reference(variables('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn]"
					},
					"openshiftMasterPublicIpAddress": {
						"value": "[reference(variables('openshiftMasterPublicIpDnsLabel')).ipAddress]"
					},
					"openshiftInfraHostname": {
						"value": "[variables('openshiftInfraHostname')]"
					},
					"openshiftGlusterHostname": {
						"value": "[variables('openshiftGlusterHostname')]"
					},
					"openshiftNodeHostname": {
						"value": "[variables('openshiftNodeHostname')]"
					},
					"masterInstanceCount": {
						"value": "[parameters('masterInstanceCount')]"
					},
					"infraInstanceCount": {
						"value": "[parameters('infraInstanceCount')]"
					},
					"glusterInstanceCount": {
						"value": "[parameters('glusterInstanceCount')]"
					},
					"nodeInstanceCount": {
						"value": "[parameters('nodeInstanceCount')]"
					},
					"adminUsername": {
						"value": "[parameters('adminUsername')]"
					},
					"openshiftPassword": {
						"value": "[parameters('openshiftPassword')]"
					},
					"aadClientId": {
						"value": "[parameters('aadClientId')]"
					},
					"aadClientSecret": {
						"value": "[parameters('aadClientSecret')]"
					},
					"nipioDomain": {
						"value": "[concat(reference(variables('infraLbPublicIpDnsLabel')).ipAddress, '.nip.io')]"
					},
					"customDomain": {
						"value": "[parameters('defaultSubDomain')]"
					},
					"subDomainChosen": {
						"value": "[concat(parameters('defaultSubDomainType'), 'Domain')]"
					},
					"sshPrivateKey": {
						"reference": {
							"keyvault": {
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
							},
							"secretName": "[parameters('keyVaultSecret')]"
						}
					}
				}
			}
		}
	],
	"outputs": {
		"Openshift Console Url": {
			"type": "string",
			"value": "[concat('https://', reference(variables('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn, ':8443/console')]"
		},
		"Openshift Master SSH": {
			"type": "string",
			"value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn, ' -p 2200')]"
		}
	}
}
